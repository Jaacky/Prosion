extends layout

block content
	script(type='text/javascript').
		var graph = !{graph}
		console.log(graph)
	.container-fluid
		h1= graphName
		.row
			.col-sm-12
				h2 New value
				form(action='/graph/input', method='post')
					input(type='number', id='value', name='value', placeholder='Value')
					input(type='string', id='id', name='id' value=graphId hidden)
					button.btn.btn-default(type='submit') Add


		#graph-container Hello

	script(type='text/javascript').
		var dataset = graph.data;
		console.log(moment(dataset[0][0]).format('DDD'));
		
		var svgWidth = 500, svgHeight = 300, padding = 30;
		var svg = d3.select('#graph-container')
					.append('svg')
					.attr('width', svgWidth)
					.attr('height', svgHeight);
		var scale = d3.scale.linear()
					.domain([100, 500])
					.range([10, 350]);

		var xScale = d3.scale.linear()
						.domain([0, d3.max(dataset, function(d) { return convertDateToDayNumber(d[0]); })])
						.range([padding, svgWidth - padding * 2]);

		var yScale = d3.scale.linear()
						.domain([0, d3.max(dataset, function(d) { return d[1]; })])
						.range([svgHeight - padding, padding]);

		svg.selectAll('circle')
			.data(dataset)
			.enter()
			.append('circle')
			.attr('cx', function(d) {
				return xScale(convertDateToDayNumber(d[0]));
			})
			.attr('cy', function(d) {
				return yScale(d[1]);
			})
			.attr('r', 3);

		var xAxis = d3.svg.axis()
					.scale(xScale)
					.orient('bottom');
		var yAxis = d3.svg.axis()
					.scale(yScale)
					.orient('left');

		svg.append('g')
			.attr('class', 'axis')
			.attr('transform', 'translate(0,' + (svgHeight - padding) + ')')
			.call(xAxis);

		svg.append('g')
			.attr('class', 'axis')
			.attr('transform', 'translate(' + padding + ', 0)')
				.call(yAxis);
